/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../../../common";

export interface ErrorsInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "ADDRESS_ALREADY_OWN_TOKEN"
      | "AMOUNT_CANT_BE_ZERO"
      | "CALLER_CANT_USE_FUNCTION"
      | "CALLER_IS_BANNED"
      | "CALLER_NOT_ADMIN"
      | "CALLER_NOT_FACTORY"
      | "CALLER_NOT_OWN_TOKEN"
      | "CALLER_NOT_TOKEN"
      | "CALLER_USE_INVALID_ARGUMENT"
      | "INSUFFICIENT_BALANCE"
      | "INVALID_LEGACY_FEE_PERCENTAGE"
      | "INVALID_NETWORK_PARTICIPATION_PERCENTAGE"
      | "INVALID_RETAINED_PERCENTAGE"
      | "INVALID_REVOKE_FEE_PERCENTAGE"
      | "INVALID_SUPPLY"
      | "NETWORK_NOT_ALLOWED"
      | "OVERFLOW_MAX_SUPPLY"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "ADDRESS_ALREADY_OWN_TOKEN",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "AMOUNT_CANT_BE_ZERO",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CALLER_CANT_USE_FUNCTION",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CALLER_IS_BANNED",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CALLER_NOT_ADMIN",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CALLER_NOT_FACTORY",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CALLER_NOT_OWN_TOKEN",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CALLER_NOT_TOKEN",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "CALLER_USE_INVALID_ARGUMENT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "INSUFFICIENT_BALANCE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "INVALID_LEGACY_FEE_PERCENTAGE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "INVALID_NETWORK_PARTICIPATION_PERCENTAGE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "INVALID_RETAINED_PERCENTAGE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "INVALID_REVOKE_FEE_PERCENTAGE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "INVALID_SUPPLY",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "NETWORK_NOT_ALLOWED",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "OVERFLOW_MAX_SUPPLY",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "ADDRESS_ALREADY_OWN_TOKEN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "AMOUNT_CANT_BE_ZERO",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "CALLER_CANT_USE_FUNCTION",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "CALLER_IS_BANNED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "CALLER_NOT_ADMIN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "CALLER_NOT_FACTORY",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "CALLER_NOT_OWN_TOKEN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "CALLER_NOT_TOKEN",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "CALLER_USE_INVALID_ARGUMENT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "INSUFFICIENT_BALANCE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "INVALID_LEGACY_FEE_PERCENTAGE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "INVALID_NETWORK_PARTICIPATION_PERCENTAGE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "INVALID_RETAINED_PERCENTAGE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "INVALID_REVOKE_FEE_PERCENTAGE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "INVALID_SUPPLY",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "NETWORK_NOT_ALLOWED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "OVERFLOW_MAX_SUPPLY",
    data: BytesLike
  ): Result;
}

export interface Errors extends BaseContract {
  connect(runner?: ContractRunner | null): Errors;
  waitForDeployment(): Promise<this>;

  interface: ErrorsInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  ADDRESS_ALREADY_OWN_TOKEN: TypedContractMethod<[], [string], "view">;

  AMOUNT_CANT_BE_ZERO: TypedContractMethod<[], [string], "view">;

  CALLER_CANT_USE_FUNCTION: TypedContractMethod<[], [string], "view">;

  CALLER_IS_BANNED: TypedContractMethod<[], [string], "view">;

  CALLER_NOT_ADMIN: TypedContractMethod<[], [string], "view">;

  CALLER_NOT_FACTORY: TypedContractMethod<[], [string], "view">;

  CALLER_NOT_OWN_TOKEN: TypedContractMethod<[], [string], "view">;

  CALLER_NOT_TOKEN: TypedContractMethod<[], [string], "view">;

  CALLER_USE_INVALID_ARGUMENT: TypedContractMethod<[], [string], "view">;

  INSUFFICIENT_BALANCE: TypedContractMethod<[], [string], "view">;

  INVALID_LEGACY_FEE_PERCENTAGE: TypedContractMethod<[], [string], "view">;

  INVALID_NETWORK_PARTICIPATION_PERCENTAGE: TypedContractMethod<
    [],
    [string],
    "view"
  >;

  INVALID_RETAINED_PERCENTAGE: TypedContractMethod<[], [string], "view">;

  INVALID_REVOKE_FEE_PERCENTAGE: TypedContractMethod<[], [string], "view">;

  INVALID_SUPPLY: TypedContractMethod<[], [string], "view">;

  NETWORK_NOT_ALLOWED: TypedContractMethod<[], [string], "view">;

  OVERFLOW_MAX_SUPPLY: TypedContractMethod<[], [string], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "ADDRESS_ALREADY_OWN_TOKEN"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "AMOUNT_CANT_BE_ZERO"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CALLER_CANT_USE_FUNCTION"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CALLER_IS_BANNED"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CALLER_NOT_ADMIN"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CALLER_NOT_FACTORY"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CALLER_NOT_OWN_TOKEN"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CALLER_NOT_TOKEN"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "CALLER_USE_INVALID_ARGUMENT"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "INSUFFICIENT_BALANCE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "INVALID_LEGACY_FEE_PERCENTAGE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "INVALID_NETWORK_PARTICIPATION_PERCENTAGE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "INVALID_RETAINED_PERCENTAGE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "INVALID_REVOKE_FEE_PERCENTAGE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "INVALID_SUPPLY"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "NETWORK_NOT_ALLOWED"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "OVERFLOW_MAX_SUPPLY"
  ): TypedContractMethod<[], [string], "view">;

  filters: {};
}
