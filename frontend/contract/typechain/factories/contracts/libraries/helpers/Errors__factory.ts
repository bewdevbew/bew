/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Errors,
  ErrorsInterface,
} from "../../../../contracts/libraries/helpers/Errors";

const _abi = [
  {
    inputs: [],
    name: "ADDRESS_ALREADY_OWN_TOKEN",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "AMOUNT_CANT_BE_ZERO",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CALLER_CANT_USE_FUNCTION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CALLER_IS_BANNED",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CALLER_NOT_ADMIN",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CALLER_NOT_FACTORY",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CALLER_NOT_OWN_TOKEN",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CALLER_NOT_TOKEN",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CALLER_USE_INVALID_ARGUMENT",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INSUFFICIENT_BALANCE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVALID_LEGACY_FEE_PERCENTAGE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVALID_NETWORK_PARTICIPATION_PERCENTAGE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVALID_RETAINED_PERCENTAGE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVALID_REVOKE_FEE_PERCENTAGE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INVALID_SUPPLY",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NETWORK_NOT_ALLOWED",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OVERFLOW_MAX_SUPPLY",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6103dd61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106101155760003560e01c80635f575dd9116100ac578063d67ec14b1161007b578063d67ec14b146102b4578063da8131be146102d5578063dfdb4d4c146102f6578063e102b27214610317578063e7637a9d1461033857600080fd5b80635f575dd9146102335780637dd154ce1461025357806381d0152d1461027457806393d92db11461029457600080fd5b8063283ca29a116100e8578063283ca29a146101b257806334c8396d146101d35780633d5c07c1146101f357806350b1f3561461021357600080fd5b806307913da91461011a57806313bb21f9146101515780631fe71c86146101715780632078f28614610191575b600080fd5b61013b60405180604001604052806002815260200161189b60f11b81525081565b6040516101489190610358565b60405180910390f35b61013b604051806040016040528060018152602001601b60f91b81525081565b61013b604051806040016040528060018152602001603960f81b81525081565b61013b60405180604001604052806002815260200161313160f01b81525081565b61013b60405180604001604052806002815260200161313360f01b81525081565b61013b604051806040016040528060018152602001601960f91b81525081565b61013b604051806040016040528060018152602001603560f81b81525081565b61013b604051806040016040528060018152602001603760f81b81525081565b61013b604051806040016040528060018152602001600760fb1b81525081565b61013b60405180604001604052806002815260200161189960f11b81525081565b61013b604051806040016040528060018152602001600d60fa1b81525081565b61013b604051806040016040528060018152602001603360f81b81525081565b61013b604051806040016040528060028152602001610c4d60f21b81525081565b61013b60405180604001604052806002815260200161313560f01b81525081565b61013b60405180604001604052806002815260200161031360f41b81525081565b61013b60405180604001604052806002815260200161313760f01b81525081565b61013b604051806040016040528060018152602001603160f81b81525081565b60006020808352835180602085015260005b818110156103865785810183015185820160400152820161036a565b506000604082860101526040601f19601f830116850101925050509291505056fea2646970667358221220deef125736d0fd7491a069277113bebcd92ef2d243f48505aa7a513f3b27389a64736f6c63430008180033";

type ErrorsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ErrorsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Errors__factory extends ContractFactory {
  constructor(...args: ErrorsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Errors & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Errors__factory {
    return super.connect(runner) as Errors__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ErrorsInterface {
    return new Interface(_abi) as ErrorsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Errors {
    return new Contract(address, _abi, runner) as unknown as Errors;
  }
}
